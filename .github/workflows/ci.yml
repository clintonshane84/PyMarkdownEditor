name: CI

on:
  push:
    branches: [ master, development ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE.md'

permissions:
  contents: read

# Cancel older runs for the same branch/ref
concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# QUICK job: only on pushes to development (1 runner)
jobs:
  quick:
    if: github.event_name == 'push' && github.ref == 'refs/heads/development'
    name: Quick Lint & Test (ubuntu-latest, py3.13)
    runs-on: ubuntu-latest
    env:
      QT_QPA_PLATFORM: offscreen
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONDONTWRITEBYTECODE: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Qt runtime libs (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            xvfb \
            libegl1 \
            libgl1 \
            libgl1-mesa-dri \
            libopengl0 \
            libxkbcommon0 \
            libxcb1 \
            libx11-xcb1 \
            libxrandr2 \
            libxext6 \
            libxi6 \
            libcups2 \
            libdbus-1-3 \
            libnss3 \
            libxshmfence1 \
            libdrm2 \
            libgbm1 \
            libfreetype6 \
            fonts-dejavu-core
          ldconfig -p | grep -E 'libEGL\.so\.1|libGL\.so\.1' || true

      - name: Setup Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Ruff format (check)
        run: |
          ruff format --check .
          ruff check .

      - name: Run tests (headless)
        run: |
          xvfb-run -a python -m pytest --cov=pymd --cov-report=term-missing -q --timeout=120 --maxfail=1

  # FULL MATRIX job: only for PRs to master
  test:
    if: github.event_name == 'pull_request' && github.base_ref == 'master'
    name: Lint & Test (${{ matrix.os }}, py${{ matrix.python-version }})
    runs-on: ${{ matrix.os }}
    env:
      QT_QPA_PLATFORM: offscreen
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PYTHONDONTWRITEBYTECODE: "1"
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ "3.12", "3.13" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Qt runtime libs (Ubuntu only)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            xvfb \
            libegl1 \
            libgl1 \
            libgl1-mesa-dri \
            libopengl0 \
            libxkbcommon0 \
            libxcb1 \
            libx11-xcb1 \
            libxrandr2 \
            libxext6 \
            libxi6 \
            libcups2 \
            libdbus-1-3 \
            libnss3 \
            libxshmfence1 \
            libdrm2 \
            libgbm1 \
            libfreetype6 \
            fonts-dejavu-core
          ldconfig -p | grep -E 'libEGL\.so\.1|libGL\.so\.1' || true

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi

      - name: Ruff format (check)
        run: |
          ruff format --check .
          ruff check .

      - name: Run tests
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            xvfb-run -a python -m pytest --cov=pymd --cov-report=term-missing -q --timeout=120 --maxfail=1
          else
            python -m pytest --cov=pymd --cov-report=term-missing -q --timeout=120 --maxfail=1
          fi
